services:
  strapi:
    container_name: strapi
    build: ./strapi
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      # - ./strapi/config:/opt/app/config
      # - ./strapi/src:/opt/app/src
      # - ./strapi/package.json:/opt/package.json
      # - ./strapi/yarn.lock:/opt/yarn.lock
      - .env:/opt/app/.env
      # - ./strapi/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

    ports:
      - "5432:5432"
    networks:
      - strapi

  strapi-frontend:
      container_name: strapi-frontend
      build: ./strapi-frontend
      image: strapi-frontend:latest
      restart: unless-stopped
      ports:
      - "5173:5173"
      # volumes:
      #   - ./strapi-frontend/:/usr/app/
      networks:
        - "strapi"
      env_file: .env
      environment:
        VITE_API_TOKEN: ${API_TOKEN}

  zookeeper:
      image: wurstmeister/zookeeper:latest
      container_name: zookeeper
      ports:
        - '2181:2181'
      expose:
        - '2181'
      networks:
        - "strapi"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - '9092:9092'
      - '9093:9093'
    expose:
      - '9092'
      - '9093'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka 
      KAFKA_ADVERTISED_LISTENERS: INSIDE://localhost:9093,OUTSIDE://kafka:9092,
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKAJS_NO_PARTITIONER_WARNING: '1'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_NO_LISTENER_AUTHENTICATION_PLAINTEXT: 'true'
      KAFKA_NO_LISTENER_AUTHENTICATION_SSL: 'true'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_DIRS: /kafka/logs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - "strapi"

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - '1883:1883'
    expose:
      - '1883'
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - "strapi"

  mqtt-kafka-connector:
    build: ./mqtt-kafka-connector/
    container_name: mqtt-kafka-connector
    env_file: .env
    environment:
      - STRAPI_URL=${STRAPI_URL}
      - KAFKA_URL=${KAFKA_URL}
      - STRAPI_TOKEN=${API_TOKEN}
      - MQTT_ADDRESS=${MQTT_ENDPOINT}
    networks:
      - "strapi"
    depends_on:
      - kafka
      - mosquitto

volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge